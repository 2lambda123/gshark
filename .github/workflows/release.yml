# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Release

on:
  release:
    types: [prereleased, released]


jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm run build

      - name: Mkdir
        run: |
          mkdir -p release/gshark_darwin_amd64 && mkdir -p release/gshark_windows_amd64 &&
          mkdir -p release/gshark_linux_amd64

      - name: Move config
        run: |
          cp ./server/config-temp.yaml ./release/gshark_darwin_amd64/ && cp ./server/config-temp.yaml ./release/gshark_windows_amd64/ &&
          cp ./server/config-temp.yaml ./release/gshark_linux_amd64/

      - name: Move resource
        run: |
          cp -rf ./server/resource ./release/gshark_darwin_amd64/ && cp -rf ./server/resource ./release/gshark_windows_amd64/ &&
          cp -rf ./server/resource ./release/gshark_linux_amd64/

      - name: Copy dist
        run: |
          cp -rf ./web/dist ./release/gshark_darwin_amd64/ && cp -rf ./web/dist ./release/gshark_windows_amd64/ &&
          cp -rf ./web/dist ./release/gshark_linux_amd64/

      - name: Go Setup
        uses: actions/setup-go@v3.1.0
        with:
          go-version: 1.18

      - name: Go Build for darwin
        run: |
          cd server && GOOS=darwin GOARCH=amd64 go build && cp gshark ../release/gshark_darwin_amd64

      - name: Go Build for windows
        run: |
          GOOS=windows GOARCH=amd64 go build && cp gshark ../release/gshark_darwin_amd64

      - name: Go Build for linux
        run: |
          GOOS=linux GOARCH=amd64 go build && cp gshark ../release/gshark_darwin_amd64

      - name: Compress
        run: |
          cd .. && 7z a -r ./releases/gshark_darwin_amd64.zip ./releases/gshark_darwin_amd64/ &&
          7z a -r ./releases/gshark_windows_amd64.zip ./releases/gshark_windows_amd64/ &&
          7z a -r ./releases/gshark_linux_amd64.zip ./releases/gshark_linux_amd64

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} ./release/*
        
    
    
        
